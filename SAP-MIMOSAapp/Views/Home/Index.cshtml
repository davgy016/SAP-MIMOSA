@model SAP_MIMOSAapp.Models.SearchViewModel


<h1>Generate Mapping Between SAP PM & MIMOSA </h1>

<div class="section">
    <div class="row">
        <div class="col-md-12 mb-4">
            <!-- Search Controls -->
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Search Mappings</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <form id="mappingSearchForm" method="get" action="@Url.Action("Index", "Home")">
                                <div class="mb-3">
                                    <label for="searchInput" class="form-label">Search</label>
                                    <input type="text" id="searchInput" class="form-control" placeholder="@(string.IsNullOrEmpty(Model.SearchByLLM) ? "Enter entity name..." : "Enter LLM type...")" value="@(string.IsNullOrEmpty(Model.SearchByLLM) ? Model.SearchByEntityName : Model.SearchByLLM)" />
                                    <div id="searchInputError" class="invalid-feedback" style="display:none;"></div>
                                </div>
                                <div class="mb-3">
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="SearchType" id="searchEntityName" value="EntityName" @(string.IsNullOrEmpty(Model.SearchByLLM) ? "checked" : "")>
                                        <label class="form-check-label" for="searchEntityName">Search by Entity Name</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="SearchType" id="searchLLMType" value="LLMType" @(!string.IsNullOrEmpty(Model.SearchByLLM) ? "checked" : "")>
                                        <label class="form-check-label" for="searchLLMType">Search by LLM Type</label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-primary">Search</button>
                                    <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Clear</a>
                                </div>
                                @if (!string.IsNullOrEmpty(Model.SearchByEntityName) || !string.IsNullOrEmpty(Model.SearchByLLM))
                                {
                                    <div class="mt-2">
                                        <small class="text-muted">
                                            Found @Model.FilteredCount mapping(s) out of @Model.TotalDocuments total mappings.
                                        </small>
                                    </div>
                                }
                            </form>
                        </div>

                        <!-- AI Assistant Search -->
                        <div class="col-md-6">
                            <form id="aiSearchForm" method="post" asp-action="Index" asp-controller="Home">
                                <div class="mb-3">
                                    <label for="queryInput" class="form-label">AI Assistant</label>
                                    <input type="text" id="queryInput" name="Query" class="form-control"
                                           placeholder="Ask a question about SAP-MIMOSA mapping..." value="@(Model.Query ?? "")" />
                                    <div id="aiInputError" class="invalid-feedback" style="display:none;"></div>
                                </div>
                                <div class="d-flex mb-3 gap-2">
                                    <button type="submit" class="btn btn-primary">Ask AI</button>
                                    <div>
                                        <select name="LLMType" class="form-select">
                                            <option value="">Select LLM</option>
                                            <option value="GPT-4">GPT-4</option>
                                            <option value="GPT-3.5">GPT-3.5</option>
                                        </select>
                                    </div>

                                </div>
                            </form>
                            <div id="aiResponse">
                                @if (!string.IsNullOrEmpty(Model.AIResponse))
                                {
                                    <div class="alert alert-info">
                                        <h4>AI Response:</h4>
                                        <p>@Html.Raw(Model.AIResponse?.Replace("\n", "<br/>") ?? "")</p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3">
        @* <button id="resetButton" class="btn btn-warning">Reset All Colors</button> *@
        <a href="@Url.Action("Create", "Home")" class="btn btn-primary">Create New Mapping</a>
    </div>

    <!-- Mapping Table with Complex Header -->
    @if ((Model.SearchResults != null && Model.SearchResults.Count > 0)
    || !string.IsNullOrEmpty(Model.SearchByEntityName)
    || !string.IsNullOrEmpty(Model.SearchByLLM))
    {
        // Only show table if searching by EntityName or LLM, not by AI/Query
        @if (Model.SearchResults.Count == 0)
        {

            <p class="text-center">No mappings found.</p>

        }
        else
        {
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th rowspan="2" class="align-middle">Map ID</th>
                            <th rowspan="2" class="align-middle">LLM Type</th>
                            <th colspan="5" class="text-center border-bottom" style="background-color:lightseagreen !important; border-right: 3px solid gray;">SAP</th>
                            <th colspan="6" class="text-center border-bottom " style="background-color: seagreen !important;">MIMOSA</th>
                            @* <th rowspan="2" class="align-middle">Actions</th> *@
                        </tr>
                        <tr style="white-space:nowrap;">
                            <!-- SAP columns -->
                            @* <th>Platform</th> *@
                            <th>Table Name</th>
                            <th>Field Name</th>
                            <th>Description</th>
                            <th>Data Type</th>
                            <th style="border-right: 3px solid gray;">Length</th>

                            <!-- MIMOSA columns -->
                            @* <th>Platform</th> *@
                            <th>Table Name</th>
                            <th>Field Name</th>
                            <th>Description</th>
                            <th>Data Type</th>
                            <th>Length</th>
                        </tr>
                    </thead>


                    @foreach (var document in Model.SearchResults)
                    {
                        int mappingCount = document.mappings.Count;

                        <tbody class="mapping-group" id="group-@document.mapID">
                            @for (int i = 0; i < mappingCount; i++)
                            {
                                var mapping = document.mappings[i];
                                <tr>
                                    @if (i == 0)
                                    {
                                        <td rowspan="@mappingCount" class="align-middle border-right bg-white" id="mapID_@document.mapID">
                                            <div class="d-flex flex-column align-items-center gap-2 ">
                                                <span class="fw-bolder mt-5 fs-4">@document.mapID</span>
                                                <hr class="w-100" />
                                                <div class="d-flex flex-column justify-content-center gap-2 w-100">
                                                    <button class="btn btn-info btn-sm w-100" onclick="toggleRow('@document.mapID')">Details</button>
                                                    <a href="@Url.Action("Edit", "Home", new { id = document.mapID })" class="btn btn-primary btn-sm mb-2">Edit</a>
                                                    <form method="post" action="@Url.Action("Delete", "Home", new { id = document.mapID })" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this mapping document?');">
                                                        <button type="submit" class="btn btn-danger btn-sm w-100">Delete</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </td>
                                        <td rowspan="@mappingCount" class="align-middle border-right bg-white">@document.LLMType</td>
                                    }
                                    <!-- SAP fields -->
                                    <td>@mapping.sap.entityName</td>
                                    <td>@mapping.sap.fieldName</td>
                                    <td>@mapping.sap.description</td>
                                    <td>@mapping.sap.dataType</td>
                                    <td style="border-right: 3px solid gray;">@mapping.sap.fieldLength</td>

                                    <!-- MIMOSA fields -->
                                    <td>@mapping.mimosa.entityName</td>
                                    <td>@mapping.mimosa.fieldName</td>
                                    <td>@mapping.mimosa.description</td>
                                    <td>@mapping.mimosa.dataType</td>
                                    <td>@mapping.mimosa.fieldLength</td>
                                </tr>
                            }
                            <tr id="details-@document.mapID" class="details-row details-animate" style="display: none;">
                                <td colspan="15" class="p-0">
                                    <div class="card shadow-sm border-info m-2">
                                        <div class="card-header bg-info text-white d-flex align-items-center">
                                            <i class="bi bi-info-circle-fill fs-5 me-2"></i>
                                            <strong>Mapping Details</strong>
                                        </div>
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-md-6 mb-2 border-end">
                                                    <h6 class="fw-bold mb-1"><i class="bi bi-chat-left-text"></i> Prompt</h6>
                                                    <div class="ms-3">@document.prompt</div>
                                                </div>
                                                <div class="col-md-6 mb-2 d-flex flex-column justify-content-center">
                                                    <div class="d-flex align-items-center mb-2">
                                                        <i class="bi bi-bar-chart me-2 text-primary"></i>
                                                        <span class="fw-bold">Accuracy Rate:</span>
                                                        <span class="ms-2 text-muted">N/A</span>
                                                    </div>
                                                    <div class="d-flex align-items-center mb-2">
                                                        <i class="bi bi-award me-2 text-success"></i>
                                                        <span class="fw-bold">Quality Rate:</span>
                                                        <span class="ms-2 text-muted">N/A</span>
                                                    </div>
                                                    <div class="d-flex align-items-center">
                                                        <i class="bi bi-link-45deg me-2 text-info"></i>
                                                        <span class="fw-bold">Matching:</span>
                                                        <span class="ms-2 text-muted">N/A</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    }


                </table>
            </div>
        }
    }
</div>


<div class="section mt-4">
    <h2>Key Differences Between SAP PM and MIMOSA Data  Models</h2>
    <ol>
        <li>
            <strong>Naming Conventions:</strong>
            <ul>
                <li>SAP PM uses short, often cryptic field names (e.g., AUFNR, AUART)</li>
                <li>MIMOSA uses descriptive, human-readable field names (e.g., WorkOrderID, WorkOrderType)</li>
            </ul>
        </li>
        <li>
            <strong>Data Types:</strong>
            <ul>
                <li>SAP PM has specific length constraints for character fields</li>
                <li>MIMOSA uses more generic data types without explicit length constraints</li>
            </ul>
        </li>
        <li>
            <strong>Relationships:</strong>
            <ul>
                <li>SAP PM uses technical keys for relationships (EQUNR, TPLNR)</li>
                <li>MIMOSA uses more semantic relationship fields (AssetID, LocationID)</li>
            </ul>
        </li>
        <li>
            <strong>Extensions:</strong>
            <ul>
                <li>SAP PM can be extended with custom Z-fields (Z*)</li>
                <li>MIMOSA allows for standard-compliant extensions through its object model</li>
            </ul>
        </li>
    </ol>
</div>

@section Scripts {
    <script>
        //Search form logic
        function updateSearchInputName() {
            const searchType = document.querySelector('input[name="SearchType"]:checked').value;
            const searchInput = document.getElementById('searchInput');
            searchInput.removeAttribute('name');
            if (searchType === 'EntityName') {
                searchInput.name = 'SearchByEntityName';
                searchInput.placeholder = 'Enter entity name...';
            } else {
                searchInput.name = 'SearchByLLM';
                searchInput.placeholder = 'Enter LLM type...';
            }
        }

        function showInputError(inputElem, errorElem, message) {
            errorElem.textContent = message;
            errorElem.style.display = 'block';
            inputElem.classList.add('is-invalid');
        }
        function clearInputError(inputElem, errorElem) {
            errorElem.textContent = '';
            errorElem.style.display = 'none';
            inputElem.classList.remove('is-invalid');
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Update placeholder when radio changes
            document.getElementById('searchEntityName').addEventListener('change', updateSearchInputName);
            document.getElementById('searchLLMType').addEventListener('change', updateSearchInputName);
            updateSearchInputName();
            //input name on submit
            document.getElementById('mappingSearchForm').addEventListener('submit', function(e) {
                updateSearchInputName();
                const searchInput = document.getElementById('searchInput');
                const errorElem = document.getElementById('searchInputError');
                clearInputError(searchInput, errorElem);
                if (!searchInput.value.trim()) {
                    showInputError(searchInput, errorElem, 'Please enter a search value.');
                    e.preventDefault();
                    return false;
                }
            });
            // Set radio button based on which field is filled
            const searchInput = document.getElementById('searchInput');
            if (searchInput.value && !document.getElementById('searchLLMType').checked) {
                document.getElementById('searchEntityName').checked = true;
            } else if (searchInput.value && document.getElementById('searchLLMType').checked) {
                document.getElementById('searchLLMType').checked = true;
            }
            // AI Assistant form validation and loading message
            document.getElementById('aiSearchForm').addEventListener('submit', function(e) {
                const aiInput = document.getElementById('queryInput');
                const errorElem = document.getElementById('aiInputError');
                clearInputError(aiInput, errorElem);
                if (!aiInput.value.trim()) {
                    showInputError(aiInput, errorElem, 'Please enter a question for the AI assistant.');
                    e.preventDefault();
                    return false;
                }
                document.getElementById('aiResponse').innerHTML = '<div class="alert alert-info">Loading response...</div>';
                return true;
            });

        });

        //Row toggle logic
        function toggleRow(mapID) {
            // Hide all other open details rows
            document.querySelectorAll('.details-row').forEach(function(row) {
                if (row.id !== 'details-' + mapID) {
                    row.classList.remove('showing');
                    setTimeout(function() { row.style.display = 'none'; }, 400);
                }
            });
            // Toggle the selected row with animation
            const row = document.getElementById('details-' + mapID);
            if (row && row.style.display === 'none') {
                row.style.display = 'table-row';
                setTimeout(function() { row.classList.add('showing'); }, 10);
            } else if(row) {
                row.classList.remove('showing');
                setTimeout(function() { row.style.display = 'none'; }, 400);
            }
        }

    </script>
}
